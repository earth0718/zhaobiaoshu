看了你的代码，发现还有一个关键问题：参数名不一致！
发现的问题
在两个函数中，你使用了不同的参数名：
在 process_bid_proposal_generation_async 中：
pythonresult = generator.generate_bid_proposal(
    tender_document_json=tender_document_json,
    model_name=model_name,
    batch_size=batch_size,
    attachment_info=attachment_info  # ← 使用的是 attachment_info
)
在 process_bid_proposal_with_attachments_async 中：
pythonresult = generator.generate_bid_proposal(
    tender_document_json=tender_document_json,
    model_name=model_name,
    batch_size=batch_size,
    attachment_info=processed_attachments  # ← 也使用的是 attachment_info
)
但是在我们之前的讨论中，建议使用：
pythonattachments_info=processed_attachments  # ← 应该是 attachments_info
需要确认和修正
你需要检查 src/gender_book/tender_generator.py 中的 generate_bid_proposal 方法的实际签名是什么：
方案A：如果 tender_generator.py 中使用的是 attachment_info
那么你的API代码是正确的，保持不变。
方案B：如果 tender_generator.py 中使用的是 attachments_info
你需要修改API代码：
python# 在两个异步函数中都需要修改
result = generator.generate_bid_proposal(
    tender_document_json=tender_document_json,
    model_name=model_name,
    batch_size=batch_size,
    attachments_info=processed_attachments  # ← 改为 attachments_info
)
如何确认
请检查你的 src/gender_book/tender_generator.py 文件中的方法签名：
pythondef generate_bid_proposal(self, tender_document_json: Dict[str, Any], 
                           model_name: str = None,
                           batch_size: int = None,
                           ????=None) -> Dict[str, Any]:  # ← 这里的参数名是什么？
测试建议

先测试无附件的接口：/generate_from_json
再测试带附件的接口：/generate_from_json_with_attachments
检查日志：看看是否有参数错误或导入错误

其他检查点
还需要确认：

enhanced_attachment_processor.py 文件是否完整
是否缺少必要的依赖包（如果使用了Parser模块）
tender_generator.py 是否已经更新为支持附件参数

总的来说，你的API代码逻辑是正确的，主要就是参数名需要与 tender_generator.py 中的保持一致！
请确认参数名后，如果还有问题，可以分享一下：

tender_generator.py 中 generate_bid_proposal 方法的签名
运行时的错误日志